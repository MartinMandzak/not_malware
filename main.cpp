//
// Created by Martin Mandz√°k on 04/09/2023.
// https://www.youtube.com/watch?v=dQw4w9WgXcQ
//
#include <fstream>
#include <thread>
using std::string;

void create_file(int num, const string& path, int thread_num){
    for(int i = 1;i<=num;i++){
        std::ofstream file(path+
        string(thread_num/26+1,(char) (thread_num%26+64)) //so we don't run out of letters
        +std::to_string(i)+".txt");
    }
}

int main(){
    int num = 1000; // <-- number of files

    string path = "txt/";
    unsigned int threadCount = std::thread::hardware_concurrency();

    std::thread threads[threadCount];
    for (int i = 1; i <= threadCount; i++) {
        threads[i-1] = std::thread(create_file,num/threadCount,path,i);
    }
    for (int i = 1; i <= threadCount; i++) {
        threads[i-1].join();
    }
    if(num%threadCount != 0){
        create_file(num%threadCount,path+"additional_",1);
    }
    return 0;
}


